package VistaVenta;
import VistaVenta.VentaAdmin;
import Metodo.Facturacion;
import Metodo.metodoCliente;
import Metodo.metodoVenta;
import Objetos.Producto;
import VistaCliente.ClientesAgVenta;
import VistaIngreso.PerfilAdmin;
import VistaIngreso.PerfilVendedor;
import VistaProductos.ProductosAdmin;
import VistaProductos.ProductosVendedor;
import VistaProveedor.ProveedorAdmin;
import VistaReparaciones.ReparacionAdmin;
import VistaReparaciones.ReparacionVendedor;
import VistaUsuarios.UsuariosAdmin;
import java.awt.Image;
import static java.lang.Integer.parseInt;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class VentaAgregarVendedor extends javax.swing.JFrame {

    public VentaAgregarVendedor() {
        initComponents();
        
        setSize(1300, 700);//Tamaño de la ventana 
        
        this.setLocationRelativeTo(this);//Centra la ventana en la mitad de la pantalla
        this.setResizable(false);// Se deshabilita el Botón Max del Form
        
        SetImageLabel(Image_logo, "src/images/logo.png");//Imagen del logo

        this.cargarTabla();
        this.cargarTablaVenta();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo = new javax.swing.JPanel();
        Image_logo = new javax.swing.JLabel();
        Boton_ventas = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedido = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        textCategoria = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textProducto = new javax.swing.JTextField();
        Boton_agregar2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        Boton_agregar3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        textIdProducto = new javax.swing.JTextField();
        Boton_agregar4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cantidad = new javax.swing.JTextField();
        textCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Boton_remover = new javax.swing.JButton();
        textTotal = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textIdUsuario = new javax.swing.JTextField();
        Boton_reparaciones = new javax.swing.JButton();
        Boton_inventario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fondo.setBackground(new java.awt.Color(2, 2, 2));
        fondo.setPreferredSize(new java.awt.Dimension(1300, 700));
        fondo.setLayout(null);

        Image_logo.setBackground(new java.awt.Color(255, 255, 255));
        fondo.add(Image_logo);
        Image_logo.setBounds(42, 14, 110, 110);

        Boton_ventas.setBackground(new java.awt.Color(0, 0, 0));
        Boton_ventas.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        Boton_ventas.setForeground(new java.awt.Color(255, 255, 255));
        Boton_ventas.setText("Ventas");
        Boton_ventas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_ventas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_ventasActionPerformed(evt);
            }
        });
        fondo.add(Boton_ventas);
        Boton_ventas.setBounds(30, 140, 130, 45);

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton1.setText("Perfil");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        fondo.add(jButton1);
        jButton1.setBounds(30, 600, 130, 45);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 62)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("BIKE LIFE");
        fondo.add(jLabel1);
        jLabel1.setBounds(200, 10, 317, 72);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel3.setText("Agregar Venta");

        tablaPedido.setAutoCreateRowSorter(true);
        tablaPedido.setBackground(new java.awt.Color(204, 204, 204));
        tablaPedido.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tablaPedido.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        tablaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPedido.setRowHeight(30);
        tablaPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPedidoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPedido);

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel2.setText("Categoria:");

        textCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCategoriaActionPerformed(evt);
            }
        });
        textCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCategoriaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textCategoriaKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel4.setText("Nombre:");

        textProducto.setEnabled(false);
        textProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textProductoActionPerformed(evt);
            }
        });
        textProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textProductoKeyTyped(evt);
            }
        });

        Boton_agregar2.setBackground(new java.awt.Color(102, 204, 255));
        Boton_agregar2.setText("Agregar");
        Boton_agregar2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_agregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_agregar2ActionPerformed(evt);
            }
        });

        tablaProductos.setAutoCreateRowSorter(true);
        tablaProductos.setBackground(new java.awt.Color(204, 204, 204));
        tablaProductos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tablaProductos.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaProductos.setRowHeight(30);
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaProductos);

        Boton_agregar3.setBackground(new java.awt.Color(102, 204, 255));
        Boton_agregar3.setText("Finalizar venta");
        Boton_agregar3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_agregar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_agregar3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel5.setText("Id Producto");

        textIdProducto.setEnabled(false);
        textIdProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIdProductoActionPerformed(evt);
            }
        });
        textIdProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textIdProductoKeyTyped(evt);
            }
        });

        Boton_agregar4.setBackground(new java.awt.Color(255, 153, 153));
        Boton_agregar4.setText("Cancelar venta");
        Boton_agregar4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_agregar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_agregar4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel6.setText("Cantidad:");

        cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadActionPerformed(evt);
            }
        });
        cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadKeyTyped(evt);
            }
        });

        textCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textClienteActionPerformed(evt);
            }
        });
        textCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textClienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textClienteKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel7.setText("ID Cliente");

        Boton_remover.setBackground(new java.awt.Color(255, 153, 153));
        Boton_remover.setText("Remover");
        Boton_remover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_removerActionPerformed(evt);
            }
        });

        textTotal.setEnabled(false);
        textTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTotalActionPerformed(evt);
            }
        });
        textTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textTotalKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        jLabel9.setText("Total:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(textTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Boton_agregar3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(Boton_agregar4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(textCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(textCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(textIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(textProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Boton_agregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Boton_remover, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(textCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(textCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Boton_remover, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Boton_agregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(textIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Boton_agregar3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Boton_agregar4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(textTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        fondo.add(jPanel1);
        jPanel1.setBounds(201, 101, 1050, 540);

        jLabel8.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("ID Usuario");
        fondo.add(jLabel8);
        jLabel8.setBounds(941, 30, 150, 40);

        textIdUsuario.setBackground(new java.awt.Color(0, 0, 0));
        textIdUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        textIdUsuario.setForeground(new java.awt.Color(255, 255, 255));
        fondo.add(textIdUsuario);
        textIdUsuario.setBounds(1130, 30, 117, 41);

        Boton_reparaciones.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        Boton_reparaciones.setText("Reparaciones");
        Boton_reparaciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_reparaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_reparacionesActionPerformed(evt);
            }
        });
        fondo.add(Boton_reparaciones);
        Boton_reparaciones.setBounds(30, 200, 130, 45);

        Boton_inventario.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        Boton_inventario.setText("Productos");
        Boton_inventario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Boton_inventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_inventarioActionPerformed(evt);
            }
        });
        fondo.add(Boton_inventario);
        Boton_inventario.setBounds(30, 260, 130, 45);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Boton_ventasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_ventasActionPerformed
        // TODO add your handling code here:
        //Llamando al metodo//
        this.metodoBtnVentas();
    }//GEN-LAST:event_Boton_ventasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            this.BtnPerfil();
        } catch (SQLException ex) {
            Logger.getLogger(VentaAgregarVendedor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void textCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCategoriaActionPerformed

    private void textCategoriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCategoriaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textCategoriaKeyTyped

    private void textProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textProductoActionPerformed

    private void textProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textProductoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textProductoKeyTyped

    private void Boton_agregar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_agregar2ActionPerformed
        // TODO add your handling code here:
        this.agregarProductoPedido();
    }//GEN-LAST:event_Boton_agregar2ActionPerformed

    private void Boton_agregar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_agregar3ActionPerformed
        try {
            // TODO add your handling code here:
            this.facturar();
        } catch (SQLException ex) {
            Logger.getLogger(VentaAgregarVendedor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Boton_agregar3ActionPerformed

    private void textIdProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIdProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIdProductoActionPerformed

    private void textIdProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textIdProductoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textIdProductoKeyTyped

    private void Boton_agregar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_agregar4ActionPerformed
        // TODO add your handling code here:
        this.metodoBtnVentas();
    }//GEN-LAST:event_Boton_agregar4ActionPerformed

    private void cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadActionPerformed

    private void cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadKeyTyped

    private void textCategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCategoriaKeyReleased
        // TODO add your handling code here:
        String producto = textCategoria.getText().toUpperCase();
        
        // Instancio el método de validación de usuario
        metodoVenta  metodo= new metodoVenta();
         
        metodo.busqueda(producto, tablaProductos);
    }//GEN-LAST:event_textCategoriaKeyReleased

    private void tablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseClicked
        // TODO add your handling code here:  
        int fila = tablaPedido.rowAtPoint(evt.getPoint());
        metodoVenta metodo = new metodoVenta();
        metodo.seleccionar(tablaProductos, textIdProducto, textProducto);
    }//GEN-LAST:event_tablaProductosMouseClicked

    private void textClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienteActionPerformed

    private void textClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textClienteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textClienteKeyReleased

    private void textClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textClienteKeyTyped
        // TODO add your handling code here:
        // Obtener el carácter ingresado
        int key = evt.getKeyChar();

        // Verificar si el carácter es un número
        boolean esNumero = key >= 48 && key <= 57;

        // Verificar la longitud actual del texto en el campo de texto
        JTextField campoTexto = (JTextField) evt.getSource();
        String textoActual = campoTexto.getText();
        int longitudActual = textoActual.length();

        // Validar que solo se permitan números y que no se excedan los 10 dígitos
        if (!esNumero || longitudActual >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_textClienteKeyTyped

    private void Boton_removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_removerActionPerformed
        // TODO add your handling code here:
        this.removerProductoTabla();
    }//GEN-LAST:event_Boton_removerActionPerformed

    private void tablaPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPedidoMouseClicked
        // TODO add your handling code here:
        int fila = tablaPedido.rowAtPoint(evt.getPoint());
        metodoVenta metodo = new metodoVenta();
        metodo.seleccionar(tablaPedido, textIdProducto, textProducto);
    }//GEN-LAST:event_tablaPedidoMouseClicked

    private void Boton_reparacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_reparacionesActionPerformed
        // TODO add your handling code here:
        //Llamando al metodo
        this.metodo_boton_reparaciones();
    }//GEN-LAST:event_Boton_reparacionesActionPerformed

    private void Boton_inventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_inventarioActionPerformed
        // TODO add your handling code here:
        //Llamando al metodo //
        this.metodoBtnProductos();
    }//GEN-LAST:event_Boton_inventarioActionPerformed

    private void textTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTotalActionPerformed

    private void textTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textTotalKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_textTotalKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentaAgregarVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentaAgregarVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentaAgregarVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentaAgregarVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new VentaAgregarVendedor().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_agregar2;
    private javax.swing.JButton Boton_agregar3;
    private javax.swing.JButton Boton_agregar4;
    private javax.swing.JButton Boton_inventario;
    private javax.swing.JButton Boton_remover;
    private javax.swing.JButton Boton_reparaciones;
    private javax.swing.JButton Boton_ventas;
    private javax.swing.JLabel Image_logo;
    private javax.swing.JTextField cantidad;
    private javax.swing.JPanel fondo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaPedido;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField textCategoria;
    private javax.swing.JTextField textCliente;
    private javax.swing.JTextField textIdProducto;
    private javax.swing.JTextField textIdUsuario;
    private javax.swing.JTextField textProducto;
    private javax.swing.JTextField textTotal;
    // End of variables declaration//GEN-END:variables

    //Metodo donde da el tamaño de la imagen dependiendo el contenedor que tenga
    private void SetImageLabel(JLabel labelName, String root){
        //Agregando imagen de logo//
        ImageIcon image = new ImageIcon(root);
        // Se crea un ImageIcon usando la ruta especificada en 'root'

        Icon icon = new ImageIcon(image.getImage().getScaledInstance(labelName.getWidth(), labelName.getHeight(), Image.SCALE_DEFAULT));
        // Se escala la imagen para que se ajuste al tamaño del contenedor 'labelName'
        // 'labelName.getWidth()' y 'labelName.getHeight()' obtienen el ancho y alto del JLabel
        // 'Image.SCALE_DEFAULT' indica el método de escalamiento predeterminado

        labelName.setIcon(icon);
        // Se establece el ícono escalado como el ícono del JLabel 'labelName'

        this.repaint();
        // Se repinta el contenedor para reflejar los cambios visuales
    }
    
    private void cargarTabla() {
        // Definir nombres de columnas
        String[] nombresColumnas = {"ID Producto", "Nombre", "Precio Venta",  "Cantidad disponibles", "Categoria", "Proveedor"};

        // Crear el modelo de la tabla con columnas pero sin filas
        DefaultTableModel model = new DefaultTableModel(nombresColumnas, 0);

        // Establecer el modelo en la tabla
        tablaProductos.setModel(model);
    
        // Opcional: aplicar un ordenamiento a la tabla si es necesario
        TableRowSorter<TableModel> ordenarTabla = new TableRowSorter<>(model);
        tablaProductos.setRowSorter(ordenarTabla);
    }
    
    public void rellenarIdUsuario(int idUsuario) {
        textIdUsuario.setText(String.valueOf(idUsuario));
    }
    
    public void metodo_boton_reparaciones() {
        String idUsuarioString = textIdUsuario.getText();
        int idUsuario = parseInt(idUsuarioString);
        // Abrir la ventana de Reparaciones
        ReparacionVendedor ventana = new ReparacionVendedor();
        ventana.setVisible(true);
        // Rellenar el campo textIdUsuario con la identificación del usuario
        ventana.rellenarIdUsuario(idUsuario);
        this.setVisible(false);
    }
    
    private void metodoBtnProductos() {
        String idUsuarioString = textIdUsuario.getText();
        int idUsuario = parseInt(idUsuarioString);
        // Abrir la ventana de Productos
        ProductosVendedor ventana = new ProductosVendedor();
        ventana.setVisible(true);
        // Rellenar el campo textIdUsuario con la identificación del usuario
        ventana.rellenarIdUsuario(idUsuario);
        this.setVisible(false);
    }
    
    private void metodoBtnVentas() {
        String idUsuarioString = textIdUsuario.getText();
        int idUsuario = parseInt(idUsuarioString);
        // Abrir la ventana de Ventas
        VentaVendedor ventana = new VentaVendedor();
        ventana.setVisible(true);
        // Rellenar el campo textIdUsuario con la identificación del usuario
        ventana.rellenarIdUsuario(idUsuario);
        this.setVisible(false);
    }
    
    private void cargarTablaVenta() {
        // Definir nombres de columnas
        String[] nombresColumnas = {"ID Producto", "Nombre", "Categoria","Cantidad", "Precio Unidad", "% IVA", "Total sin Iva", "Valor del IVA", "Total con iva"};

        // Crear el modelo de la tabla con columnas pero sin filas
        DefaultTableModel model = new DefaultTableModel(nombresColumnas, 0);

        // Establecer el modelo en la tabla
        tablaPedido.setModel(model);
    
        // Opcional: aplicar un ordenamiento a la tabla si es ne^cesario
        TableRowSorter<TableModel> ordenarTabla = new TableRowSorter<>(model);
        tablaPedido.setRowSorter(ordenarTabla);
    }

    // Contador estático para las veces que se llama al método
    private static int contadorMetodos = 0;

    private void agregarProductoPedido() {
        // Incrementar el contador cada vez que se llama al método
        contadorMetodos++;
        System.out.println("Método llamado " + contadorMetodos + " veces.");

        // Verificar si el ID del cliente está vacío
        metodoCliente  mCliente= new metodoCliente();
        
        if (textCliente.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingresa el número de identidad del cliente");
        }else{
            
            int text = parseInt(textCliente.getText());
            boolean cliente = mCliente.validarCliente(text);
            if (cliente) {
                metodoVenta metodo = new metodoVenta();
                Producto objeto = new Producto();

                String id = textIdProducto.getText();
                objeto.setId(Integer.parseInt(id));
                String cantidadString = cantidad.getText();
                int cantidad = Integer.parseInt(cantidadString);

                metodo.agregarProductoPedido(tablaPedido, objeto, cantidad, textTotal);

                // Bloquear el campo textIdCliente para que no se pueda modificar
                textCliente.setEditable(false);
            } else {
                String idUsuarioString = textIdUsuario.getText();
                // Convertir el ID del usuario a entero
                int idUsuario = Integer.parseInt(idUsuarioString);

                ClientesAgVenta ventana = new ClientesAgVenta();
                ventana.setVisible(true);
                // Rellenar el campo textIdUsuario con la identificación del usuario
                ventana.rellenarIdUsuario(idUsuario);
            } 
        }
        
    }

    private void facturar() throws SQLException {
        // Calcular la suma de la columna de valores
        float total = 0;
        int columnIndex = 8; // Índice de la columna con los valores a sumar

        // Iterar sobre cada fila de la tabla para sumar los valores en la columna especificada
        for (int row = 0; row < tablaPedido.getRowCount(); row++) {
            // Obtener el valor en la celda de la columna específica
            Object value = tablaPedido.getValueAt(row, columnIndex);

            //System.out.println(value);

            // Convertir el valor a un número y agregarlo al total
            // Manejar valores nulos y excepciones si es necesario
            if (value != null) {
                total += Double.parseDouble(value.toString());
            }
        }

        // Definir el tamaño del array basado en el número de filas en la tabla
        int longitud = tablaPedido.getRowCount();
        String[] listaProductos = new String[longitud];

        // Obtener el ID del cliente desde el campo de texto
        String idClienteString = textCliente.getText();
        // Obtener el ID del usuario desde el campo de texto
        String idUsuarioString = textIdUsuario.getText();

        // Convertir el ID del cliente a entero
        int idCliente = Integer.parseInt(idClienteString);
        // Convertir el ID del usuario a entero
        int idUsuario = Integer.parseInt(idUsuarioString);

        // Índice de la columna con los IDs de los productos (asegúrate de que este valor sea correcto)
        int columnIndex2 = 0; // Cambia esto al índice real de la columna de ID de productos

        // Iterar sobre cada fila de la tabla para obtener los IDs de los productos
        for (int row = 0; row < longitud; row++) {
            // Obtener el valor del ID del producto en la columna específica
            Object value = tablaPedido.getValueAt(row, columnIndex2);

            // Convertir el valor a una cadena y almacenarlo en el array
            // Manejar valores nulos para evitar errores
            listaProductos[row] = value != null ? value.toString() : "";
        }

        // Imprimir los IDs de los productos para verificar
        for (String id : listaProductos) {
            System.out.println(id);
        }

        // Crear una instancia del método de venta (suponiendo que 'metodoVenta' es una clase con un método 'agregarProductosAPedido')
        metodoVenta metodo = new metodoVenta();

        // Llamar al método para agregar los productos al pedido, pasando el ID del cliente y el array de IDs de productos
        if(metodo.finalizarVenta(tablaPedido, idCliente, idUsuario)){
            Facturacion facturaPDF = new Facturacion();
            String rutaArchivo = "C:/Users/JUAN DAVID/Documents/PDF facturas/Facturas Ventas";
            float totalCompra = total; 

            facturaPDF.generarFacturaPDFVenta(tablaPedido, rutaArchivo, totalCompra, idCliente, idUsuario);

            String mensaje = "Factura Generada Correctamente\nTotal a pagar: " + totalCompra;
            JOptionPane.showMessageDialog(null, mensaje);

            // Abrir la ventana de Ventas
            VentaVendedor ventana = new VentaVendedor();
            ventana.setVisible(true);
            // Rellenar el campo textIdUsuario con la identificación del usuario
            ventana.rellenarIdUsuario(idUsuario);
            this.setVisible(false);
        }
        else{
            String mensaje = "Factura No generada, revisa el pedido ";
            JOptionPane.showMessageDialog(null, mensaje);
        }
       
        // Imprimir el total
        //System.out.println("El total es: " + total);
    }
    
    private void removerProductoTabla() {
        metodoVenta metodo = new metodoVenta();
    }
    
    private void BtnPerfil() throws SQLException {
        String idUsuarioString = textIdUsuario.getText();
        int idUsuario = parseInt(idUsuarioString);
        // Abrir la ventana de Usuario
        PerfilVendedor ventana = new PerfilVendedor();
        ventana.setVisible(true);
        // Rellenar el campo textIdUsuario con la identificación del usuario
        ventana.rellenarIdUsuario(idUsuario);
        this.setVisible(false);
    }
}
